name: Build

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macos, linux]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          repository: llvm/llvm-project
          path: llvm-project

      - name: Prep
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build
          mkdir llvm-project/build && cd llvm-project/build

      - name: Configure and Build (MacOS)
        if: ${{ matrix.os == 'macos' }}
        run: |
          cmake -G Ninja \
              -DCMAKE_BUILD_TYPE=MinSizeRel \
              -DLLVM_ENABLE_PROJECTS=clang \
              -DLLVM_TARGET_ARCH=x86_64 \
              -DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-apple-darwin \
              -DCMAKE_OSX_ARCHITECTURES=x86_64 \
              ../llvm
          ninja clang-format

      - name: Configure and Build (Linux)
        if: ${{ matrix.os == 'linux' }}
        run: |
          cmake -G Ninja \
              -DCMAKE_BUILD_TYPE=MinSizeRel \
              -DLLVM_BUILD_STATIC=true \
              -DLLVM_ENABLE_ZLIB=no \
              -DLLVM_ENABLE_PROJECTS=clang \
              ../llvm
          ninja clang-format

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: clang-format-${{ matrix.os }}
          path: llvm-project/build/bin/clang-format
